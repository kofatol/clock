{"version":3,"sources":["components/Clock/hooks/useTime.js","components/Hour/Hour.tsx","App.model.tsx","components/Minute/Minute.tsx","components/Second/Second.tsx","components/Spinner/Spinner.tsx","components/Clock/Clock.tsx","hooks/useThemeMode.js","components/ThemeSwitcher/ThemeSwitcher.tsx","App.tsx","index.tsx"],"names":["useTime","useState","hh","setHh","mm","setMm","ss","setSs","useEffect","intervalId","setInterval","day","Date","getHours","getMinutes","getSeconds","clearInterval","Hour","rotationDegree","className","style","transform","AppContext","React","createContext","Minute","isLightMode","useContext","Second","Spinner","Clock","useThemeMode","setIsLightMode","onThemeChange","prevState","ThemeSwitcher","onClick","App","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAwBeA,EAtBC,WACd,IACA,EAAoBC,mBAAS,GAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAoBF,mBAAS,GAA7B,mBAAOG,EAAP,KAAWC,EAAX,KACA,EAAoBJ,mBAAS,GAA7B,mBAAOK,EAAP,KAAWC,EAAX,KAeA,OAbAC,qBAAU,WACR,IAAMC,EAAaC,aAAY,WAC7B,IAAMC,EAAM,IAAIC,KAChBT,GAAM,kBAAuB,GAAjBQ,EAAIE,cAChBR,GAAM,kBATE,EASIM,EAAIG,gBAChBP,GAAM,kBAVE,EAUII,EAAII,kBACf,KAEH,OAAO,WACLC,cAAcP,MAEf,CAACP,EAAIE,EAAIE,IAEL,CAAEJ,KAAIE,KAAIE,O,cCNJW,EAXyB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACzC,OACE,qBAAKC,UAAU,OAAf,SACE,qBACEA,UAAU,WACVC,MAAO,CAAEC,UAAU,WAAD,OAAaH,EAAb,cCHpBI,EAAaC,IAAMC,cAAwC,ICalDC,G,MAd2B,SAAC,GAAwB,IAAtBP,EAAqB,EAArBA,eACnCQ,EAAgBC,qBAAWL,GAA3BI,YAER,OACE,qBAAKP,UAAU,SAAf,SACE,qBACEA,UAAS,gCACLO,EAAc,mBAAqB,mBACvCN,MAAO,CAAEC,UAAU,WAAD,OAAaH,EAAb,eCEXU,G,MAX2B,SAAC,GAAwB,IAAtBV,EAAqB,EAArBA,eAC3C,OACE,qBAAKC,UAAU,SAAf,SACE,qBACEA,UAAU,aACVC,MAAO,CAAEC,UAAU,WAAD,OAAaH,EAAb,eCeXW,G,MArBW,WACxB,OACE,qBAAKV,UAAU,UAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,+BCaOW,G,MAtBS,WACtB,MAAuB9B,IAAfE,EAAR,EAAQA,GAAIE,EAAZ,EAAYA,GAAIE,EAAhB,EAAgBA,GACRoB,EAAgBC,qBAAWL,GAA3BI,YAER,OACE,mCACIxB,EAGA,sBACEiB,UAAS,2BACPO,EAAc,cAAgB,cAFlC,UAIE,cAAC,EAAD,CAAMR,eAAgBhB,EAAKE,EAAK,KAChC,cAAC,EAAD,CAAQc,eAAgBd,IACxB,cAAC,EAAD,CAAQc,eAAgBZ,OAR1B,cAAC,EAAD,QCJOyB,EAVM,WACnB,MAAsC9B,oBAAS,GAA/C,mBAAOyB,EAAP,KAAoBM,EAApB,KAMA,MAAO,CAAEN,cAAaO,cAJA,WACpBD,GAAe,SAACE,GAAD,OAAgBA,QCkBpBC,G,MAhBqC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7CV,EAAgBC,qBAAWL,GAA3BI,YAER,OACE,qBACEU,QAASA,EACTjB,UAAS,+BACPO,EAAc,qBAAuB,uBAHzC,SAKE,sBAAMP,UAAU,sBAAhB,SACGO,EAAc,YAAc,mBCKtBW,G,MAhBO,WACpB,MAAuCN,IAA/BL,EAAR,EAAQA,YAAaO,EAArB,EAAqBA,cAErB,OACE,qBACEd,UAAS,qBACPO,EAAc,YAAc,YAFhC,SAIE,eAACJ,EAAWgB,SAAZ,CAAqBC,MAAO,CAAEb,eAA9B,UACE,cAAC,EAAD,CAAeU,QAASH,IACxB,cAAC,EAAD,WCbRO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a171c5c0.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useTime = () => {\n  const deg = 6;\n  const [hh, setHh] = useState(0);\n  const [mm, setMm] = useState(0);\n  const [ss, setSs] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const day = new Date();\n      setHh(() => day.getHours() * 30);\n      setMm(() => day.getMinutes() * deg);\n      setSs(() => day.getSeconds() * deg);\n    }, 500);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [hh, mm, ss]);\n\n  return { hh, mm, ss };\n};\n\nexport default useTime;\n","import React from \"react\";\nimport { ClockChildProps } from \"../../interfaces\";\nimport \"./Hour.scss\";\n\nconst Hour: React.FC<ClockChildProps> = ({ rotationDegree }) => {\n  return (\n    <div className=\"Hour\">\n      <div\n        className=\"Hour__hr\"\n        style={{ transform: `rotateZ(${rotationDegree}deg)` }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Hour;\n","import React from \"react\";\n\ninterface AppContextProps {\n  isLightMode: boolean;\n}\n\nconst AppContext = React.createContext<Partial<AppContextProps>>({});\n\nexport { AppContext };\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../App.model\";\nimport { ClockChildProps } from \"../../interfaces\";\nimport \"./Minute.scss\";\n\nconst Minute: React.FC<ClockChildProps> = ({ rotationDegree }) => {\n  const { isLightMode } = useContext(AppContext);\n\n  return (\n    <div className=\"Minute\">\n      <div\n        className={`Minute__mn\n          ${isLightMode ? \"Minute__mn_light\" : \"Minute__mn_dark\"}`}\n        style={{ transform: `rotateZ(${rotationDegree}deg)` }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Minute;\n","import React from \"react\";\nimport { ClockChildProps } from \"../../interfaces\";\nimport \"./Second.scss\";\n\nconst Second: React.FC<ClockChildProps> = ({ rotationDegree }) => {\n  return (\n    <div className=\"Second\">\n      <div\n        className=\"Second__sc\"\n        style={{ transform: `rotateZ(${rotationDegree}deg)` }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Second;\n","import React from \"react\";\nimport \"./Spinner.scss\";\n\nconst Spinner: React.FC = () => {\n  return (\n    <div className=\"Spinner\">\n      <div className=\"Spinner__container\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useContext } from \"react\";\nimport { useTime } from \"./hooks\";\nimport Hour from \"../Hour\";\nimport Minute from \"../Minute\";\nimport Second from \"../Second\";\nimport Spinner from \"../Spinner\";\nimport { AppContext } from \"../../App.model\";\nimport \"./Clock.scss\";\n\nconst Clock: React.FC = () => {\n  const { hh, mm, ss } = useTime();\n  const { isLightMode } = useContext(AppContext);\n\n  return (\n    <>\n      {!hh ? (\n        <Spinner />\n      ) : (\n        <div\n          className={`Clock\n          ${isLightMode ? \"Clock_light\" : \"Clock_dark\"}`}\n        >\n          <Hour rotationDegree={hh + mm / 12} />\n          <Minute rotationDegree={mm} />\n          <Second rotationDegree={ss} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Clock;\n","import { useState } from \"react\";\n\nconst useThemeMode = () => {\n  const [isLightMode, setIsLightMode] = useState(false);\n\n  const onThemeChange = () => {\n    setIsLightMode((prevState) => !prevState);\n  };\n\n  return { isLightMode, onThemeChange };\n};\n\nexport default useThemeMode;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../App.model\";\nimport \"./ThemeSwitcher.scss\";\n\ninterface ThemeSwitcherProps {\n  onClick: () => void;\n}\n\nconst ThemeSwitcher: React.FC<ThemeSwitcherProps> = ({ onClick }) => {\n  const { isLightMode } = useContext(AppContext);\n\n  return (\n    <div\n      onClick={onClick}\n      className={`ThemeSwitcher\n      ${isLightMode ? \"ThemeSwitcher_dark\" : \"ThemeSwitcher_light\"}`}\n    >\n      <span className=\"ThemeSwitcher__text\">\n        {isLightMode ? \"Dark mode\" : \"Light mode\"}\n      </span>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n","import React from \"react\";\nimport Clock from \"./components/Clock\";\nimport { AppContext } from \"./App.model\";\nimport { useThemeMode } from \"./hooks\";\nimport ThemeSwitcher from \"./components/ThemeSwitcher\";\nimport \"./App.scss\";\n\nconst App: React.FC = () => {\n  const { isLightMode, onThemeChange } = useThemeMode();\n\n  return (\n    <div\n      className={`App\n      ${isLightMode ? \"App_light\" : \"App_dark\"}`}\n    >\n      <AppContext.Provider value={{ isLightMode }}>\n        <ThemeSwitcher onClick={onThemeChange} />\n        <Clock />\n      </AppContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}